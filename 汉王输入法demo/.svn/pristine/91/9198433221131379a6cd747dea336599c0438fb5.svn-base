//
//  GZRequest.m
//  HanvonKeyboard
//
//  Created by hanvon on 2018/3/13.
//  Copyright © 2018年 hanvon. All rights reserved.
//

#import "GZRequest.h"


static GZRequest *share;
static dispatch_once_t onceToken;

@interface GZRequest()
@property (nonatomic, strong) NSOperationQueue *operationQueue_request; //线程队列
@end

@implementation GZRequest
+ (id)shareRequest{
    dispatch_once(&onceToken, ^{
        share = [[self alloc] init];
    });
    return share;
}
- (id)init {
    self = [super init];
    if (self) {
        self.operationQueue_request = [[NSOperationQueue alloc] init] ;
        self.operationQueue_request.maxConcurrentOperationCount = 1; //设置最大并发线程数
    }
    return self;
}

- (void)removeRequest {
    [self cancel];
    onceToken = 0;
    share = nil;
}

#pragma mark -- 线程操作
- (void)stop {
    [self.operationQueue_request setSuspended:YES];
}
- (void)start {
    [self.operationQueue_request setSuspended:NO];
}
- (void)cancel {
    [self.operationQueue_request cancelAllOperations];
}


#pragma mark -- request
//post
- (void)postDataWithURL:(NSString *)URL
                andBody:(id)body
           completation:(SuccessBlock)success
                failure:(FailureBlock)failure
{
    //先判断网络
    //    BOOL isnetOK = [DataRequest checkNetworkIsOK];
    //    if (!isnetOK) {
    //        [DataRequest setNumber:1];
    //        return;
    //    }

    if (!URL || URL.length == 0) {
        return;
    }

    [self start];

    // 1.创建请求
    URL = [URL stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    NSURL *url = [NSURL URLWithString:URL];
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    request.HTTPMethod = @"POST";
    request.timeoutInterval = 5;

    // 2.设置请求头
    [request setValue:@"application/x-www-form-urlencoded;charset=utf-8" forHTTPHeaderField:@"Content-Type"];

    // 3.设置请求体
    NSMutableString *data = [[NSMutableString alloc] init];
    if ([body isKindOfClass:[NSDictionary class]]){
        for (NSString *key in body) {
            id value = [body objectForKey:key];
            if ([value isKindOfClass:[NSString class]]) {
                value = (__bridge_transfer  NSString*) CFURLCreateStringByAddingPercentEscapes(kCFAllocatorDefault, (__bridge CFStringRef)value, NULL, (__bridge CFStringRef)@"!*'();:@&=+$,/?%#[]", kCFStringEncodingUTF8);
            }

            NSString *dataStr = [NSString stringWithFormat:@"%@=%@",key,value];
            //dataStr = [dataStr stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
            //NSString * encodedString = (NSString *)CFBridgingRelease(CFURLCreateStringByAddingPercentEscapes(kCFAllocatorDefault,(CFStringRef)dataStr,NULL,NULL,kCFStringEncodingUTF8));
            [data appendFormat:@"%@&",dataStr];
        }
        [data substringToIndex:data.length-1];

    }else if ([body isKindOfClass:[NSArray class]]){
        NSArray *bodyA = body;
        for (int i=0; i<bodyA.count; i++) {
            if (i<bodyA.count-1) {
                [data appendFormat:@"%@&",body[i]];
            }
            if (i == bodyA.count -1) {
                [data appendFormat:@"%@",body[i]];
            }
        }

    }else{
        NSLog(@"body格式不是数组也不是字典，例如微信登录传递url？");
        [data appendFormat:@"%@",body];
    }

    NSData *dataS =[data dataUsingEncoding:NSUTF8StringEncoding];
    [request setHTTPBody:dataS];

    //4.异步 单队列
    [self.operationQueue_request addOperationWithBlock:^{
        [NSURLConnection sendAsynchronousRequest:request
                                           queue:[NSOperationQueue mainQueue]
                               completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {

                                   if (connectionError){
                                       NSInteger errorCode = connectionError.code;
                                       NSLog(@"errorCode == %ld",(long)errorCode);
                                       //计算次数
                                   }else{
                                       if ([response isKindOfClass:[NSHTTPURLResponse class]]) {
                                           NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse*)response;
                                           if (httpResponse.statusCode != 200) {
                                               NSLog(@"服务器错误 == %ld",(long)httpResponse.statusCode);
                                               failure(connectionError);
                                               return;
                                           }
                                       }

                                       //下载完成后回到主队列刷新UI
                                       [[NSOperationQueue mainQueue] addOperationWithBlock:^{
                                           [self stop]; //停止线程
                                           NSDictionary *dic =[NSJSONSerialization JSONObjectWithData:data
                                                                                              options:NSJSONReadingMutableContainers
                                                                                                error:nil];
                                           success(dic);
                                           return;
                                       }];
                                   }
                               }];
    }];
}



@end
